import base64

y = 29981686655511881311683281778322815038643328002077409711368637699608197395549958019005885526739471471175984492868601267408812161264765979475600377958542316954457831648789546504148611739287751973707373760186579359092856783701179847850286555874139252755750484204636417126682212093393466924776208050325232182629969503647980366081503505047457099204604314307030127101692542241111499447086426955995332260939956963014212417951740961908997239926298108582783614906043225442529153708846838741600113471660911538025454876045824897332336154033952937184320760878374553470976521576273134828056934283747088764505777056772695275646843
g = 22048218924520527796141341660966737056674883367503245976456476594879412660772954068772163706080186525421327015856342084888683165272242733954577097203380993193064933703028593016799504153396313661489525442089033981516589931477274660466459693775771690678891897293564724542009507225888875342211835806710592962435425301276624200377280188514357980826881677834274592997036867125678633754491969469657685688226922812074485072824190148090134868351164432102690046938196254121234953179825418599422478345390488336295886386914128680715820393583121833954784379568384011202490125925474288807346235598959436400331295179421069360933631
p = 31262536445810248960060403868718378750360770530841848328866694130804088895036874307568617364252510893731052885838633001461872226270531797937488539685234353598033036617690246149745416496082296697638602496923671931600037507113745819890752651786769105098693385971838496963492216214748578661430098863420553864958980285249473335369875556910483922094876482880972966217545975169615479630960391915189200919035631944267787731506083460262952794487003235468479922220033926557574315210359988307267058496786500013651262791030480916426740237451690542452219236944408062975239272113840092594912244589847174789261029312323671199872387
q = 21993598483830603718542937755635538460179327025352106280113963439889

def verify(m, r, s):
    if r == 0 or s == 0 or m == 0:
        return False
    w = int(pow(s, -1, q))
    u1 = int(m * w % q)
    u2 = int(r * w % q)
    v = int(int(pow(g, u1, p) * pow(y, u2, p) % p) % q)
    return v == r

a, b = randint(0,123123123), 4561234
K = int(pow(g, a, p) * pow(y, b, p) % p)
r = int(K % q)
s = int(r * pow(b, -1, q) % q)
base = int(a *r * pow(b, -1, q) % q)
assert verify(base, r, s)

target = ('{"id":1,"x":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}').encode()
t = int.from_bytes(target, 'big')
v = crt([0, int((base - t) % q)], [2^(16*2), q])

m = t + v
assert verify(m, r, s)

payload = int(m).to_bytes(len(target), 'big')
print(f'/visit?p={base64.urlsafe_b64encode(payload).decode()}&r={r}&s={s}')
