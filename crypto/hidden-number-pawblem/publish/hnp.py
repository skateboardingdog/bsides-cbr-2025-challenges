from Crypto.Util.number import getPrime, long_to_bytes
from Crypto.Cipher import AES

FLAG = b"skbdg{?????????????????????????????????????????}"
assert len(FLAG) == 48

primes = [getPrime(128) for _ in range(3)]
modulus = getPrime(128)

key = long_to_bytes(primes[0] ^ primes[1] ^ primes[2] ^ modulus)
aes = AES.new(key, AES.MODE_ECB)
encrypted_flag = aes.encrypt(FLAG)

for i in range(16):
    tmp = sum(e*p for e,p in zip(encrypted_flag[i::16], primes))
    print(tmp % modulus)

'''
150446291068140049563320772229191257428
30274497893933825999264440472646873791
43867575705590228789129962680194301102
215435877342780673372868219690346172147
99919967040475127359053542571984408741
1418241424975041702003923185520387792
185934806776900279451263515202940787830
9915399472284561223892051362047539015
128538985168972255782337580802434396984
66625731371269352564215497563133736582
208818196421195854278004492989600277886
99906814947789931207521912729518463975
71965491875756016264158124104626078247
17142191919773459556570465854141914661
79550053952325692474643350015142936377
133451730769263639095159572044716238586
'''
